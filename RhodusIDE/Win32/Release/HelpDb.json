{"listOfHelpEntries":[{"recordType":"rtModule","moduleName":"math","description":"This is the math module","methods":[{"methodType":"hmtMethod","methodName":"sin","signature":"sin (int|float|array)","description":"Returns the sine of the argument measured in radians.","examples":["x = math.sin (1.2)","x = math.sin (math.pi)","x = math.sin ([1,2,3])"]},{"methodType":"hmtMethod","methodName":"cos","signature":"cos (int|float|array))","description":"Returns the cosine of the argument measured in radians.","examples":["x = math.cos (1.2)","x = math.cos (math.pi)","x = math.cos ([1,2,3])"]},{"methodType":"hmtMethod","methodName":"tan","signature":"tan (int|float|array))","description":"Returns the tangent of the argument measured in radians.","examples":["x = math.tan (1.2)","x = math.tan (math.pi)","x = math.tan ([1,2,3])"]},{"methodType":"hmtMethod","methodName":"asin","signature":"asin (int|float|array))","description":"It works out the asin","examples":["x = math.asin (1.2)","x = math.asin (math.pi)","x = math.asin ([1,2,3])"]},{"methodType":"hmtMethod","methodName":"acos","signature":"acos (int|float|array))","description":"It works out the acos","examples":["x = math.acos (1.2)","x = math.acos (math.pi)","x = math.acos ([1,2,3])"]},{"methodType":"hmtMethod","methodName":"atan","signature":"atan (int|float|array))","description":"It works out the atan","examples":["x = math.atan (1.2)","x = math.atan (math.pi)","x = math.atan ([1,2,3])"]},{"methodType":"hmtMethod","methodName":"toDegrees","signature":"toDegrees (int|float))","description":"Use this method to convert radians to degrees.","examples":["x = math.toDegrees (math.pi)","x = math.toDegrees (6.5)"]},{"methodType":"hmtMethod","methodName":"toRadians","signature":"toRadians(int|float))","description":"Use this method to convert degrees to radians.","examples":["x = math.toRadians (90)","x = math.toRadians (45)","x = math.sin (math.toRadians (45))"]},{"methodType":"hmtMethod","methodName":"sqr","signature":"sqr(int|float))","description":"Computes the square of a number.","examples":["x = math.sqr (9)"]},{"methodType":"hmtMethod","methodName":"sqrt","signature":"sqrt(int|float))","description":"Computes the square root of a number. Negative values are not supported.","examples":["x = math.sqrt (9)"]},{"methodType":"hmtMethod","methodName":"exp","signature":"exp(int|float))","description":"Computes e raised to the power of a value","examples":["x = math.exp (9)"]},{"methodType":"hmtMethod","methodName":"ln","signature":"ln(int|float))","description":"Computes the natural logarithm of a value.","examples":["x = math.ln (9)"]},{"methodType":"hmtMethod","methodName":"log","signature":"log(int|float))","description":"Computes the logarithm to base 10 of a value","examples":["x = math.llog (1000)"]},{"methodType":"hmtMethod","methodName":"abs","signature":"abs(int|float))","description":"Returns the absolute value of a number.","examples":["x = math.abs (9)"]},{"methodType":"hmtMethod","methodName":"round","signature":"round(int|float))","description":"Returns a value to the nearest whole number.","examples":["x = math.abs (2.3)"]},{"methodType":"hmtMethod","methodName":"ceil","signature":"ceil(int|float))","description":"Rounds variables up toward positive infinity.","examples":["x = math.ceil (4.3)"]},{"methodType":"hmtMethod","methodName":"floor","signature":"floor(int|float))","description":"Returns the largest integer less than or equal to a given number.","examples":["x = math.floor (4.3)"]},{"methodType":"hmtMethod","methodName":"trunc","signature":"trunc(int|float))","description":"Returns the integer part of floating point number.","examples":["x = math.trunc (4.3)"]},{"methodType":"hmtMethod","methodName":"max","signature":"max(int|float))","description":"Returns the maximum of two numbers","examples":["x = math.max (2,4)"]},{"methodType":"hmtMethod","methodName":"min","signature":"min(int|float))","description":"Returns the minimum of two numbers.","examples":["x = math.min (4, 3)"]},{"methodType":"hmtValue","methodName":"pi","signature":"","description":"Returns the value of pi","examples":["x = math.pi"]},{"methodType":"hmtValue","methodName":"eps","signature":"","description":"Values below this are considered zero.","examples":["x = math.eps"]}]},{"recordType":"rtModule","moduleName":"random","description":"This is the random module","methods":[{"methodType":"hmtMethod","methodName":"seed","signature":"seed()","description":"Set the seed for the random number generator","examples":["seed (23)"]},{"methodType":"hmtMethod","methodName":"random","signature":"randm()","description":"Return a uniformly distributed random number","examples":["random()"]}]},{"recordType":"rtModule","moduleName":"strings","description":"This is the string module","methods":[{"methodType":"hmtMethod","methodName":"str","signature":"str(string)","description":"Converts a string into a number","examples":["value = strings.str (\"1.23\")"]},{"methodType":"hmtMethod","methodName":"val","signature":"val(int|double)","description":"Converts a number into a string","examples":["astr = strings.val(23)"]},{"methodType":"hmtMethod","methodName":"format","signature":"format(int|double, string)","description":"Formats a number and returns a string","examples":["astr = strings.format (2.3456, \"%3.2f\")"]},{"methodType":"hmtMethod","methodName":"random","signature":"random(int)","description":"Generate a rnadom sequenc yyo letter and digits of a given length","examples":["astr = strings.random(15)"]},{"methodType":"hmtValue","methodName":"asciiLower","signature":"","description":"Returns the lower ascii characters as a string","examples":["x = strings.asciiLower"]},{"methodType":"hmtValue","methodName":"asciiUpper","signature":"","description":"Returns the upper ascii characters as a string","examples":["x = strings.asciiUpper"]},{"methodType":"hmtValue","methodName":"digits","signature":"","description":"Returns the digit characters as a string","examples":["x = strings.digits"]}]},{"recordType":"rtModule","moduleName":"sys","description":"This is the sys module","methods":[{"methodType":"hmtValue","methodName":"version","signature":"","description":"Returns the current verison of the interpreter","examples":["x = sys.version"]},{"methodType":"hmtValue","methodName":"doubleFormat","signature":"","description":"Default output format string for double values","examples":["x = sys.doubleFormat"]},{"methodType":"hmtValue","methodName":"integerFormat","signature":"","description":"Default output format string for integer values","examples":["x = sys.integerFormat"]},{"methodType":"hmtValue","methodName":"argv","signature":"","description":"The list of command line arguments passed","examples":["x = sys.argv"]},{"methodType":"hmtValue","methodName":"path","signature":"","description":"Search path for Rhodus import libraries","examples":["x = sys.path"]}]},{"recordType":"rtModule","moduleName":"lists","description":"This is the lists module","methods":[{"methodType":"hmtMethod","methodName":"range","signature":"range(start, finish, stepsize)","description":"Create a list based on the range arguments","examples":["l = lists.range (0, 10, 0.5)"]},{"methodType":"hmtMethod","methodName":"rndu","signature":"rndu(integer)","description":"Create a list of uniformly randomly distributed floats between 0 and 1. ","examples":["l = lists.rndu (10)"]},{"methodType":"hmtMethod","methodName":"rndi","signature":"rndi(lower : integer, upper : integer, number of elements : integer)","description":"Create a list of random uniformly distributed integers.","examples":["l = lists.rndi (lower, upper, number)","l = lists.rndi (0, 10, 5)","l = lists.rndi (5, 10, 20)"]}]},{"recordType":"rtDataObject","moduleName":"MatrixObject","description":"This is the matrix object","methods":[{"methodType":"hmtMethod","methodName":"rows","signature":"m.rows ()","description":"Get the number of rows in the matrix: var.rows()","examples":["n = m.rows()","println (p.rows())"]},{"methodType":"hmtMethod","methodName":"cols","signature":"m.cols ()","description":"Get the number of cols in the matrix: var.cols()","examples":["n = m.cols()","println (p.cols())"]}]}]}