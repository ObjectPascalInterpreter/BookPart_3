
import testUtils

// Boolean tests

setColor("yellow")
println ("--------------------- Boolean Tests ----------------------")
setColor("white")
x = 1; y1 = 6; w = 3; v = 4;
testUtils.beginTests ("True/False Tests")
  testUtils.runtestTrue(True == True);
  testUtils.runtestTrue(True != False);
  testUtils.runtestFalse(True != True);
  testUtils.runtestFalse(False != False);
  testUtils.runtestTrue(not False);
  testUtils.runtestFalse(not True);
  testUtils.runtestTrue(not not True);
  testUtils.runtestTrue(True or True);
  testUtils.runtestTrue(True or False);
  testUtils.runtestTrue(False or True);
  testUtils.runtestTrue(not not True);
  testUtils.runtestFalse(False and True);

  testUtils.runtestTrue(True and True);
  testUtils.runtestFalse(False and False);
  testUtils.runtestFalse(not (False or True));
  testUtils.runtestTrue(not (False or False));
  testUtils.runtestTrue(not (False and True));
  testUtils.runtestTrue(not (True and False));
  testUtils.runtestTrue(not (False and False));

  testUtils.runtestFalse(True xor True);
  testUtils.runtestTrue(True xor False);
  testUtils.runtestTrue(False xor True);
  testUtils.runtestFalse(False xor False);
  testUtils.runtestTrue(False xor True and True);
testUtils.endTests()


testUtils.beginTests ("Realational Tests")
  testUtils.runtestFalse(x < x and x > x);
  testUtils.runtestFalse((x >= y1) and not (w <= v));
  testUtils.runtestFalse(y1 != 6);
  testUtils.runtestTrue(y1 == 6);

  testUtils.runtestTrue(1 < 2);
  testUtils.runtestTrue(1 <= 2);
  testUtils.runtestTrue(not (1 > 2));
  testUtils.runtestTrue(not (1 >= 2));
  testUtils.runtestTrue(not (1 == 2));
  testUtils.runtestTrue(1 != 2);
testUtils.endTests()

testUtils.beginTests ("Complex Tests")
  x = 1; y1 = 6; w = 3; v = 4;
  testUtils.runtestTrue(False xor True and True == True);
  testUtils.runtestTrue((x < x and x > x) == False);
  testUtils.runtestTrue(((x >= y1) and not (w <= v)) == False);
  testUtils.runtestTrue((y1 == 6) == True);
  testUtils.endTests()

testUtils.beginTests ("Negation Tests")
  x = 1.2;
  testUtils.runtestFalse(x == 3.4);
  x = 3.4;
  testUtils.runtestTrue(x == 3.4);
testUtils.endTests()
