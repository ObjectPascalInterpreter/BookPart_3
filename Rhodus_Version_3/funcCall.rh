
// Tests to show that functions can return the different types are in simplefunc.rh

function test
end


function test_1()
   astr = "1234";
   astr[2] = "9";
   return astr
end;

function test_2()
   astr = "1234";
   return astr + astr
end;


function test_3()
   str1 = "1234";
   str2 = "4321";
   return str1 + str2
end;


function test_4()
   c = 1.1;
   while True do
     x = c + 0.1;
     return x
   end;
end;

function test_5()
   for i = 1 to 10 do
     if i == 5 then
       return {5, 12345}
     end;
   end;
end;


function test_6()
   x = 6; 
   if x == 5 then
      x = 0
   else
      return 123456;
   end;
end;

function test_7()
  a = {1,2,3,4};
  a[2] = 1;
  return a
end;
function test_8()
  a = {1,2,3,4,5,{6,7,8}};
  a[5,0] = 99;
  return a
end;

x = 1.2

function testScoping_1 ()
   x = 4.5;   
end;
testScoping_1();

function testScoping_2 ()
   y = x;
   return y   
end;



function testArg_1 (a)
  return a
end


function testArg_2 (a, b, c)
  return a+b+c
end

function testArg_3 (x)
   return x*x
end

function call_3 (x)
   y = testArg_3 (x)
   return y
end




function returnValue (x)
   a = x;
   return a;
end;

x = returnValue(11);


function mean (x)
  sum = 0
  for i = 0 to lists.len (x) - 1 do
      sum = sum + x[i]
  end
  return sum/5
end

function repeatString(count, text)
   ret = "";
 
   for i = 1 To count do
      ret = ret + text
   end;
   return ret;
end;
 

function lots (a, b, c, d, e, f)
   x = a + b + c + d + e + f
   return x
end

function IsPrime (n)
  if n == 1 then
     return False
  end;
  for m = 2 to (n div 2) do
    if n mod m == 0 then
      return False
    end
  end;
  return True;
end;

// Compute factorial
function fac(x)
  if x <= 0 then
     return (1);
  end;
  return (x*fac(x-1));
end;


// A highly recursive function
function ack (x, y)
  if x == 0 then
     return (y+1);
  end;
  if y == 0 then
     return (ack(x-1, 1));
  end;
  return (ack(x-1, ack(x, y-1)));
end;

// Compute the greatest common divisor
function gcd (x,y)
    r = x mod y;
    while r > 0 do
        r = x mod y;
        if r == 0 then 
           return y;
        else
            q = y; x = q; y = r;
        end;
    end;
end;

r = gcd (1071,1029); 
r = gcd (5538,1105);
r = gcd (8764,7732); 


function combin(n, k)
    return fac (n)/(fac (k)*fac (n-k))
end;


function permut(n, k)
    return combin(n,k)*fac(k)
end;

// One function calling another
function add (a, b)
    return a + b
end;

function sumOfAdds (a, b)
    return add (a, b) + add (a, b)
end;

function repeatString(count, text)
   ret = "";
 
   for i = 1 To count do
      ret = ret + text
   end;
   return ret;
end;
 


function abc
   return 5
end

x = {abc}

r = {math.sin (30), math.cos (30), math.tan (30)};

x = {math.sin, math.cos, math.tan};


// And user defined funtions
function test (x) return x*x; end

x = {test}
function runtest (fcn, x)
   return fcn (x)
end

function testlog (x)
   a = {math.log}
   return a[0](x)
end

function t1 (x) return {1,2,3} + x end
function t2 (y) return t1 (y) end

